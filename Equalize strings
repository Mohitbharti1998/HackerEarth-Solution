You are given two binary strings A and B and are required to make A equals to B. There are two types of operations:

1. Swap any two adjacent bits or characters in string A. The cost of this operation is 1 unit.
2. Flip the bit or character of the string. The cost of this operation is 1 unit.

What is the minimum cost to make string A equal to B?

Input format

The first line contains one integer that denotes the length of both strings.
The next two lines take two strings A and B of length N as an input.
Output format

Print one integer that represents the minimum cost required to convert string A to string B.


Sample Input
4
1101
0011

Sample Output
2


Explanation
We will flip the first character which will cost us 1 unit. Now the string A will be "0101". We will swap second and third characters which will also cost us 1 unit.Now the string A will be "0011" which is same as B.Hence our total cost will be 2 units will be optimal.  


Solution:-

import java.util.*;

class Solution
{

    static String swap(String str,int i,int j)
    {
        char ch[] = str.toCharArray();
        char temp = ch[i];
        ch[i] = ch[j];
        ch[j] = temp;

        return String.valueOf(ch);
    }

    static String flap(String str,int i)
    {
        char ch[] = str.toCharArray();
        if(ch[i] == '1')
            ch[i] = '0';
        else
            ch[i] = '1';

        return String.valueOf(ch);
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        String s1 = sc.next();

        String s2 = sc.next();

        int i = 0,count=0;

        while(i<n-1)
        {
            if(s1.charAt(i) == s2.charAt(i))
                i++;
            else
            {
                if(s1.charAt(i) != s2.charAt(i+1)){
                    s1 = flap(s1,i);
                    count++;
                }
                else
                {
                    s1 = swap(s1,i,i+1);
                    count++;
                }
                i++;
            }
        }
        if(s1.charAt(n-1) != s2.charAt(n-1))
            count++;

        System.out.println(count);

    }
}
